{"v":"5.1.1","fr":24,"ip":0,"op":168,"w":640,"h":480,"nm":"botao1/agilidade2","ddd":1,"assets":[],"layers":[{"ddd":1,"ind":1,"ty":4,"nm":"user-esquerda/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":25,"s":[0],"e":[100]},{"t":49}],"ix":11,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"rx":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":25,"s":[-80],"e":[0.004]},{"t":59}],"ix":8,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"ry":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":25,"s":[80],"e":[0.004]},{"t":59}],"ix":9,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":25,"s":[192.574,46.979,79.642],"e":[192.574,90,-0.4],"to":[0,7.17015075683594,-13.3402986526489],"ti":[0,-7.17015075683594,13.3402986526489]},{"t":59}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[192.55,90,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[7,5.4],[0,1.9],[0,0],[-3.5,0],[-3.8,2.7],[0,0],[-13.8,-5.9],[9.4,0]],"o":[[13.8,-5.9],[0,0],[3.7,2.7],[3.6,0],[0,0],[0,1.9],[-7,5.4],[-9.3,0.1]],"v":[[-25.15,32.7],[-11.35,22.5],[-11.35,22],[-0.15,26.3],[11.15,22],[11.15,22.5],[24.95,32.7],[-0.15,41.2]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,12.9],[-10.8,0],[0,-11.9],[3.6,-4.4],[0.1,-0.2],[3.1,0]],"o":[[0,-11.9],[10.9,0],[0,6.1],[-0.2,0.2],[-3.9,4.6],[-6.1,0.1]],"v":[[-18.75,-5.7],[-0.05,-26.3],[18.75,-5.7],[12.45,10.5],[11.85,11.2],[0.05,18.7]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[-22.7,0],[0,-22.8],[6.4,-7.3],[1.9,1.3],[0,0],[0,7.3],[15,0],[0,-16],[-4.4,-5.8],[0,0],[5,-2.1],[0,10.4]],"o":[[22.7,0],[0,10.3],[-5.1,-2.1],[0,0],[4.4,-5.7],[0,-16],[-15,0],[0,7.3],[0,0],[-2,1.4],[-6.3,-7.3],[0,-22.7]],"v":[[-0.05,-41.2],[41.15,0.1],[30.95,27.2],[18.65,21.3],[18.65,14.7],[26.15,-5.6],[-0.15,-33.7],[-26.35,-5.6],[-18.85,14.7],[-18.85,21.2],[-31.15,27.1],[-41.35,0]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[-0.2,0.2],[0,13.1],[26.8,0],[0,-26.9],[-8.5,-8.8],[-0.3,-0.2],[-13.4,0],[-8.8,8.9]],"o":[[8.5,-8.8],[0,-26.9],[-26.9,0],[0,13.1],[0.2,0.2],[8.8,8.9],[13.4,0],[0.1,-0.2]],"v":[[35.05,33.8],[48.75,0],[0.05,-48.8],[-48.75,0],[-35.05,33.8],[-34.45,34.4],[0.05,48.8],[34.55,34.4]],"c":true},"ix":2},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.180000005984,0.226999993418,0.255000005984,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[192.55,90],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":6,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":25,"op":169,"st":25,"bm":0},{"ddd":1,"ind":2,"ty":4,"nm":"user-meio/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":29,"s":[0],"e":[100]},{"t":53}],"ix":11},"rx":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":29,"s":[-80],"e":[0]},{"t":63}],"ix":8,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"ry":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"rz":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":29,"s":[305.05,10.8,0],"e":[305.05,48.8,0],"to":[0,6.33333301544189,0],"ti":[0,-6.33333301544189,0]},{"t":63}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[305.05,48.8,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[7,5.3],[0,1.9],[0,0],[-3.5,0],[-3.8,2.7],[0,0],[-13.8,-5.9],[9.4,0]],"o":[[13.8,-5.9],[0,0],[3.7,2.7],[3.6,0],[0,0],[0,1.9],[-7,5.4],[-9.4,0]],"v":[[-25.15,32.7],[-11.35,22.5],[-11.35,22],[-0.15,26.3],[11.15,22],[11.15,22.5],[24.95,32.7],[-0.15,41.2]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,12.8],[-10.8,0],[0,-11.9],[3.6,-4.4],[0.1,-0.2],[3.1,0]],"o":[[0,-11.9],[10.9,0],[0,6.1],[-0.2,0.2],[-3.9,4.6],[-6.1,0]],"v":[[-18.75,-5.7],[-0.05,-26.3],[18.75,-5.7],[12.45,10.5],[11.85,11.2],[0.05,18.7]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[-22.7,0],[0,-22.8],[6.4,-7.3],[1.901,1.3],[0,0],[0,7.3],[15,0],[0,-16],[-4.4,-5.8],[0,0],[5,-2.1],[0,10.4]],"o":[[22.7,0],[0,10.4],[-5.1,-2.1],[0,0],[4.4,-5.7],[0,-16],[-15,0],[0,7.3],[0,0],[-2,1.4],[-6.3,-7.3],[-0.1,-22.7]],"v":[[-0.05,-41.3],[41.25,0],[31.05,27.1],[18.75,21.2],[18.75,14.6],[26.25,-5.7],[-0.05,-33.8],[-26.25,-5.7],[-18.75,14.6],[-18.75,21.1],[-31.05,27],[-41.25,-0.1]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[-0.2,0.3],[0,13.1],[26.9,0],[0,-26.9],[-8.5,-8.8],[-0.2,-0.2],[-13.5,0],[-8.8,8.9]],"o":[[8.4,-8.8],[0,-26.8],[-26.9,0],[0,13.1],[0.2,0.2],[8.8,8.9],[13.5,0],[0.1,-0.2]],"v":[[35.05,33.7],[48.75,-0.1],[-0.05,-48.8],[-48.75,0],[-35.05,33.8],[-34.45,34.4],[0.05,48.8],[34.55,34.4]],"c":true},"ix":2},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.451000019148,0.62400004069,0.732999973671,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[305.05,48.8],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":6,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":29,"op":169,"st":29,"bm":0},{"ddd":1,"ind":3,"ty":4,"nm":"user-direita/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":33,"s":[0],"e":[100]},{"t":57}],"ix":11},"rx":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":33,"s":[80],"e":[0]},{"t":67}],"ix":8,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"ry":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":33,"s":[80],"e":[0]},{"t":67}],"ix":9,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":33,"s":[437.5,55,-31],"e":[417.5,90,0],"to":[-3.33333325386047,5.83333349227905,5.16666650772095],"ti":[3.33333325386047,-5.83333349227905,-5.16666650772095]},{"t":67}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[417.5,90,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[7,5.4],[0,1.9],[0,0],[-3.5,0],[-3.8,2.7],[0,0],[-13.8,-5.9],[9.399,0]],"o":[[13.8,-5.9],[0,0],[3.7,2.7],[3.6,0],[0,0],[0,1.9],[-7,5.4],[-9.4,0]],"v":[[-25.099,32.7],[-11.299,22.5],[-11.299,22],[-0.099,26.3],[11.201,22],[11.201,22.5],[25,32.7],[-0.099,41.2]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,12.9],[-10.8,0],[0,-11.9],[3.599,-4.4],[0.199,-0.2],[3.2,0]],"o":[[0,-11.9],[10.9,0],[0,6.1],[-0.201,0.2],[-3.9,4.6],[-6,0.1]],"v":[[-18.701,-5.7],[0,-26.3],[18.799,-5.7],[12.5,10.5],[11.901,11.2],[0,18.7]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[-22.701,0],[0,-22.8],[6.401,-7.3],[1.902,1.3],[0,0],[0,7.3],[15,0],[0,-16],[-4.399,-5.8],[0,0],[5,-2.1],[0,10.4]],"o":[[22.7,0],[0,10.4],[-5.099,-2.1],[0,0],[4.401,-5.7],[0,-16],[-15,0],[0,7.3],[0,0],[-2,1.4],[-6.3,-7.3],[0,-22.7]],"v":[[0,-41.2],[41.299,0.1],[31.099,27.2],[18.799,21.3],[18.799,14.7],[26.299,-5.6],[0,-33.7],[-26.201,-5.6],[-18.701,14.7],[-18.701,21.2],[-31,27.1],[-41.201,0]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[-0.199,0.2],[0,13.1],[26.901,0],[0,-26.9],[-8.5,-8.8],[-0.202,-0.2],[-13.5,0],[-8.8,8.9]],"o":[[8.401,-8.8],[0,-26.9],[-26.901,0],[0,13.1],[0.199,0.2],[8.799,8.9],[13.5,0],[0.2,-0.2]],"v":[[35.099,33.8],[48.799,0],[0,-48.8],[-48.799,0],[-35.099,33.8],[-34.5,34.4],[0,48.8],[34.5,34.4]],"c":true},"ix":2},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.46699999641,0.736999990426,0.670999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[417.5,90],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":6,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":33,"op":169,"st":33,"bm":0},{"ddd":1,"ind":4,"ty":4,"nm":"seta-esquerda/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":25,"s":[280.293,167.394,0],"e":[256.293,146.394,0],"to":[-4,-3.5,0],"ti":[4,3.5,0]},{"t":49}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return sum(mul(c, sum(mul(mul(t = t / d - 1, t), sum(mul(sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[256.293,146.394,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":25,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[284.786,170.587],[284.786,208.2],[329.8,208.2],[329.8,170.587]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[233.786,127.587],[233.786,165.2],[278.8,165.2],[278.8,127.587]],"c":true}]},{"t":35}],"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-2.1,0],[-0.1,2],[0,0],[-1.3,1.6],[1.6,1.3],[0,0],[0,1.2],[2.1,0],[0,0],[0.6,-0.5],[0,0],[0.1,-0.2],[0.1,-0.2],[0,0],[0.1,-0.2],[0.1,-0.1],[0,-0.1],[0,0],[0,0]],"o":[[0,2.1],[2,0],[0,0],[1.6,1.3],[1.3,-1.6],[0,0],[0.9,-0.7],[0,-2.1],[0,0],[-0.9,0],[0,0],[-0.2,0.2],[-0.1,0.2],[0,0],[-0.1,0.2],[0,0.1],[0,0.1],[0,0],[0,0],[0,0]],"v":[[-22.75,-7.65],[-18.95,-3.85],[-15.25,-7.35],[16.15,17.75],[21.45,17.15],[20.85,11.85],[-9.25,-12.25],[-7.75,-15.25],[-11.55,-19.05],[-19.05,-19.05],[-21.35,-18.25],[-21.45,-18.25],[-21.95,-17.75],[-22.25,-17.25],[-22.35,-17.15],[-22.55,-16.65],[-22.65,-16.45],[-22.75,-16.05],[-22.75,-15.75],[-22.75,-15.55]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[256.536,146.637],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":25,"op":169,"st":25,"bm":0},{"ddd":1,"ind":5,"ty":4,"nm":"seta-centro/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":29,"s":[305.007,162.2,0],"e":[305.007,131.2,0],"to":[0,-5.16666650772095,0],"ti":[0,5.16666650772095,0]},{"t":53}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return sum(mul(c, sum(mul(mul(t = t / d - 1, t), sum(mul(sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[305.007,131.2,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":15,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[295.951,159],[295.951,211.4],[314.014,211.4],[314.014,159]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[295.93,159.5],[295.93,211.9],[313.993,211.9],[313.993,159.5]],"c":true}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":29,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[295.93,159.5],[295.93,211.9],[313.993,211.9],[313.993,159.5]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[295.975,105],[295.975,157.4],[314.038,157.4],[314.038,105]],"c":true}]},{"t":39}],"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.4,-1.4],[-1.4,0.7],[0,0],[-2.1,0],[0,2.1],[0,0],[-1.1,1.1],[1.5,1.5],[0,0],[0.2,0.2],[0,0],[0.1,0],[0.2,0],[0.1,0],[0.2,0],[0.2,-0.1],[0.1,0],[0.2,0],[0.1,-0.1],[0,0],[0.2,-0.2],[0,0]],"o":[[1.1,1.1],[0,0],[0,2.1],[2.1,0],[0,0],[1.4,0.6],[1.5,-1.5],[0,0],[-0.2,-0.2],[-0.1,-0.1],[-0.1,-0.1],[-0.1,0],[-0.1,0],[-0.2,0],[-0.2,0],[-0.1,0],[-0.1,0],[-0.1,0.1],[-0.1,0],[-0.2,0.1],[0,0],[-1.5,1.4]],"v":[[-8,-14.6],[-3.8,-13.9],[-3.8,22.4],[0,26.2],[3.7,22.4],[3.7,-13.8],[7.9,-14.5],[7.9,-19.8],[2.6,-25.1],[2,-25.6],[1.8,-25.7],[1.4,-25.9],[1,-26],[0.7,-26.1],[0,-26.2],[-0.7,-26.1],[-1,-26],[-1.4,-25.9],[-1.8,-25.7],[-2,-25.6],[-2.6,-25.1],[-7.9,-19.8]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[305.013,131.2],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":29,"op":169,"st":29,"bm":0},{"ddd":1,"ind":6,"ty":4,"nm":"seta-direita/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":33,"s":[326.727,169.344,0],"e":[353.727,146.344,0],"to":[4.5,-3.83333325386047,0],"ti":[-4.5,3.83333325386047,0]},{"t":57}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outBack(t, b, c, d) {\n    var s = 1.70158;\n    return sum(mul(c, sum(mul(mul(t = t / d - 1, t), sum(mul(sum(s, 1), t), s)), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outBack(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outBack(t, sY, eY, d);\n            val3 = easeandwizz_outBack(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[353.727,146.344,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":33,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[280.2,169.487],[280.2,207.201],[325.254,207.201],[325.254,169.487]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[331.2,127.487],[331.2,165.201],[376.254,165.201],[376.254,127.487]],"c":true}]},{"t":43}],"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.301,-1.6],[-1.701,1.3],[0,0],[-2,0],[0,2.1],[0,0],[0,0],[0,0],[0.099,0.1],[0,0.1],[0.099,0.2],[0,0.1],[0.1,0.2],[0,0],[0,0],[0.198,0.1],[0,0],[0.902,0],[0,0],[0,-2.1],[-0.901,-0.7],[0,0]],"o":[[1.301,1.6],[0,0],[0.2,1.9],[2.101,0],[0,0],[0,0],[0,0],[0,-0.1],[0,-0.1],[-0.1,-0.2],[0,-0.1],[-0.1,-0.2],[0,0],[0,0],[-0.201,-0.2],[0,0],[-0.599,-0.5],[0,0],[-2.1,0],[0,1.2],[0,0],[-1.597,1.4]],"v":[[-21.449,17.2],[-16.148,17.8],[15.25,-7.3],[18.95,-3.8],[22.75,-7.6],[22.75,-15.1],[22.75,-15.2],[22.75,-15.6],[22.651,-16],[22.549,-16.3],[22.35,-16.8],[22.249,-17],[21.949,-17.5],[21.949,-17.6],[21.85,-17.7],[21.35,-18.2],[21.248,-18.3],[18.948,-19.1],[11.448,-19.1],[7.649,-15.3],[9.149,-12.3],[-20.953,11.8]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[353.504,146.587],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":33,"op":169,"st":33,"bm":0},{"ddd":1,"ind":7,"ty":4,"nm":"moldura/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":22,"s":[0],"e":[100]},{"t":50}],"ix":11,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":22,"s":[-25],"e":[0]},{"t":50}],"ix":10,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[215.002,360.05,0],"ix":2},"a":{"a":0,"k":[215.002,360.05,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[71.25,44.95],[-71.25,44.95],[-71.25,-45.05],[71.25,-45.05]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[0,0],[-2,0],[0,0],[0,2.101],[0,0]],"o":[[0,0],[-2.1,0],[0,0],[0,2.101],[0,0],[2.1,0],[0,0],[0.1,-2.1]],"v":[[74.95,-52.55],[-75.05,-52.55],[-78.75,-48.75],[-78.75,48.75],[-75.05,52.55],[74.95,52.55],[78.65,48.75],[78.65,-48.75]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.46699999641,0.736999990426,0.670999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[215.05,360.05],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":22,"op":169,"st":22,"bm":0},{"ddd":1,"ind":8,"ty":4,"nm":"foto/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[226.182,378.825,0],"ix":2},"a":{"a":0,"k":[226.182,378.825,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":28,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[166.108,415.149],[166.108,482.5],[286.256,482.5],[286.256,415.149]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[166.108,345.149],[166.108,412.5],[286.256,412.5],[286.256,345.149]],"c":true}]},{"t":52}],"ix":1,"x":"var $bm_rt;\nfunction easeandwizz_outQuint(t, b, c, d) {\n    return sum(mul(c, sum(mul(mul(mul(mul(t = t / d - 1, t), t), t), t), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_outQuint(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.7,-1.101],[0.7,0],[0.7,1.2],[0,0],[0,0],[1.8,1.1],[-1.1,1.8],[0,0],[0,0],[0,0],[1.2,0],[0.7,0.5],[-1.2,1.7],[0,0],[-1.3,0],[-0.7,-1],[0,0],[0,0],[-1.4,-2.2],[0,0]],"o":[[-0.6,0.398],[-1.2,0],[0,0],[0,0],[-1.1,1.8],[-1.8,-1.102],[0,0],[0,0],[0,0],[-0.7,1],[-0.7,0],[-1.7,-1.2],[0,0],[0.7,-1],[1.2,0],[0,0],[0,0],[1.4,-2.2],[0,0],[1.1,1.701]],"v":[[58.3,33.1],[56.3,33.701],[53.1,31.901],[18.8,-23],[-15.5,31.901],[-20.7,33.1],[-21.9,27.901],[-16.1,18.701],[-29.9,-1],[-53.2,32.1],[-56.3,33.701],[-58.5,33],[-59.4,27.799],[-33,-9.701],[-29.9,-11.299],[-26.8,-9.701],[-11.8,11.799],[15.6,-32],[22,-32],[59.5,28]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.372999991623,0.583999992819,0.532999973671,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[226.2,378.8],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":28,"op":169,"st":28,"bm":0},{"ddd":1,"ind":9,"ty":4,"nm":"linha1/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[316.2,326.3,0],"ix":2},"a":{"a":0,"k":[316.2,326.3,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":16,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[156.2,322.5],[156.2,330.1],[313.8,330.1],[313.8,322.5]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[316.2,322.5],[316.2,330.1],[473.8,330.1],[473.8,322.5]],"c":true}]},{"t":36}],"ix":1,"x":"var $bm_rt;\nfunction easeandwizz_outQuint(t, b, c, d) {\n    return sum(mul(c, sum(mul(mul(mul(mul(t = t / d - 1, t), t), t), t), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_outQuint(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0,0],[0,2.101]],"o":[[0,0],[-2.1,0],[0,2.101],[0,0],[2.1,0],[-0.1,-2.1]],"v":[[75,-3.8],[-75,-3.8],[-78.8,0],[-75,3.8],[75,3.8],[78.8,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[395,326.3],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":16,"op":169,"st":16,"bm":0},{"ddd":1,"ind":10,"ty":4,"nm":"linha2/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[316.2,348.8,0],"ix":2},"a":{"a":0,"k":[316.2,348.8,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":20,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[216.2,345],[216.2,352.6],[313.8,352.6],[313.8,345]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[316.2,345],[316.2,352.6],[413.8,352.6],[413.8,345]],"c":true}]},{"t":40}],"ix":1,"x":"var $bm_rt;\nfunction easeandwizz_outQuint(t, b, c, d) {\n    return sum(mul(c, sum(mul(mul(mul(mul(t = t / d - 1, t), t), t), t), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_outQuint(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0,0],[0,2.101]],"o":[[0,0],[-2.1,0],[0,2.101],[0,0],[2.1,0],[-0.1,-2.1]],"v":[[45,-3.8],[-45,-3.8],[-48.8,0],[-45,3.8],[45,3.8],[48.8,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[365,348.8],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":20,"op":169,"st":20,"bm":0},{"ddd":1,"ind":11,"ty":4,"nm":"linha3/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[316.2,371.3,0],"ix":2},"a":{"a":0,"k":[316.2,371.3,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":24,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[227.2,367.5],[227.2,375.1],[309.8,375.1],[309.8,367.5]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[316.2,367.5],[316.2,375.1],[398.8,375.1],[398.8,367.5]],"c":true}]},{"t":44}],"ix":1,"x":"var $bm_rt;\nfunction easeandwizz_outQuint(t, b, c, d) {\n    return sum(mul(c, sum(mul(mul(mul(mul(t = t / d - 1, t), t), t), t), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_outQuint(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0,0],[0,2.101]],"o":[[0,0],[-2.1,0],[0,2.101],[0,0],[2.1,0],[0,-2.1]],"v":[[37.5,-3.8],[-37.5,-3.8],[-41.3,0],[-37.5,3.8],[37.5,3.8],[41.3,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[357.5,371.3],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":24,"op":169,"st":24,"bm":0},{"ddd":1,"ind":12,"ty":4,"nm":"linha4/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[316.2,393.8,0],"ix":2},"a":{"a":0,"k":[316.2,393.8,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":28,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[236.2,390],[236.2,397.6],[311.3,397.6],[311.3,390]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[316.2,390],[316.2,397.6],[391.3,397.6],[391.3,390]],"c":true}]},{"t":48}],"ix":1,"x":"var $bm_rt;\nfunction easeandwizz_outQuint(t, b, c, d) {\n    return sum(mul(c, sum(mul(mul(mul(mul(t = t / d - 1, t), t), t), t), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_outQuint(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0,0],[0,2.101]],"o":[[0,0],[-2.1,0],[0,2.101],[0,0],[2.1,0],[0,-2.1]],"v":[[33.75,-3.8],[-33.75,-3.8],[-37.55,0],[-33.75,3.8],[33.75,3.8],[37.55,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.808000033509,0.808000033509,0.808000033509,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[353.75,393.8],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":28,"op":169,"st":28,"bm":0},{"ddd":1,"ind":13,"ty":4,"nm":"centro-cronometro/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[473.594,418.656,0],"ix":2},"a":{"a":0,"k":[473.594,418.656,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.572,0],[0,-3.573],[3.573,0],[0,3.572]],"o":[[3.573,0],[0,3.572],[-3.572,0],[0,-3.573]],"v":[[0,-6.469],[6.469,0],[0,6.469],[-6.47,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[473.594,418.656],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":169,"st":0,"bm":0},{"ddd":1,"ind":14,"ty":4,"nm":"corpo-cronometro/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[473.799,418.851,0],"ix":2},"a":{"a":0,"k":[473.799,418.851,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[5.8,-3.8],[0,0],[1.399,-0.8],[-0.798,-1.401],[0,0],[7.099,-0.4],[0,0],[1.698,0],[0,-1.7],[0,0],[6,3],[0,0],[1.399,0.8],[0.8,-1.4],[0,0],[3.8,5.8],[0,0],[0.799,1.401],[1.402,-0.8],[0,0],[0.401,7.099],[0,0],[0,1.7],[1.698,0],[0,0],[-3,6],[0,0],[-0.5,0],[-0.5,1],[1.402,0.8],[0,0],[-5.802,3.8],[0,0],[-1,0],[-0.5,0.299],[0.798,1.4],[0,0],[-7.101,0.401],[0,0],[-1.7,0],[0,1.7],[0,0],[-6,-3],[0,0],[-1.401,-0.8],[-0.5,0],[-0.5,1],[0,0],[-3.8,-5.8],[0,0],[-0.801,-1.4],[-1,0],[-0.5,0.299],[0,0],[-0.399,-7.099],[0,0],[0,-1.699],[-1.7,0],[0,0],[3,-6],[0,0],[0.8,-1.4],[-1.401,-0.8],[0,0]],"o":[[0,0],[-0.8,-1.4],[-1.4,0.8],[0,0],[-6.099,3],[0,0],[0,-1.7],[-1.7,0],[0,0],[-7.101,-0.4],[0,0],[0.799,-1.399],[-1.4,-0.8],[0,0],[-5.802,-3.8],[0,0],[1.401,-0.8],[-0.802,-1.4],[0,0],[-3,-6.101],[0,0],[1.698,0],[0,-1.7],[0,0],[0.4,-7.1],[0,0],[0.5,0.301],[1,0],[0.8,-1.4],[0,0],[3.8,-5.8],[0,0],[0.602,1],[0.5,0],[1.398,-0.8],[0,0],[6.099,-3],[0,0],[0,1.7],[1.698,0],[0,0],[7.1,0.4],[0,0],[-0.799,1.399],[0.5,0.3],[1,0],[0,0],[5.8,3.8],[0,0],[-1.401,0.8],[0.6,1],[0.5,0],[0,0],[3,6.1],[0,0],[-1.7,0],[0,1.7],[0,0],[-0.398,7.101],[0,0],[-1.401,-0.8],[-0.8,1.4],[0,0],[-3.901,5.5]],"v":[[28.102,42.649],[26.701,40.149],[22.602,39.049],[21.499,43.149],[22.999,45.649],[3.102,50.949],[3.102,48.149],[0.102,45.149],[-2.898,48.149],[-2.898,51.049],[-22.799,45.749],[-21.299,43.249],[-22.398,39.149],[-26.501,40.249],[-27.898,42.749],[-42.501,28.149],[-40.001,26.749],[-38.898,22.649],[-43.001,21.549],[-45.501,23.049],[-50.799,3.149],[-47.9,3.149],[-44.9,0.149],[-47.9,-2.851],[-50.799,-2.851],[-45.5,-22.751],[-43,-21.251],[-41.5,-20.851],[-38.898,-22.351],[-40,-26.451],[-42.5,-27.851],[-27.898,-42.451],[-26.5,-39.951],[-23.898,-38.451],[-22.398,-38.851],[-21.298,-42.951],[-22.798,-45.451],[-2.898,-50.752],[-2.898,-47.852],[0.102,-44.852],[3.102,-47.852],[3.102,-50.752],[23,-45.451],[21.5,-42.951],[22.602,-38.851],[24.102,-38.451],[26.702,-39.951],[28.102,-42.451],[42.702,-27.851],[40.202,-26.351],[39.102,-22.251],[41.702,-20.751],[43.202,-21.15],[45.702,-22.65],[51.001,-2.751],[48.102,-2.751],[45.102,0.249],[48.102,3.249],[50.999,3.249],[45.701,23.149],[43.201,21.649],[39.1,22.749],[40.201,26.849],[42.701,28.349]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,10.299],[4.8,8.399],[0,0],[0,0.099],[8.5,5],[0.1,0.099],[0.101,0],[10.301,0],[8.401,-4.8],[0.099,0],[0.1,-0.1],[5,-8.5],[0.098,-0.101],[0,-0.1],[0,-10.3],[-4.8,-8.4],[0,-0.101],[-0.101,-0.099],[-8.4,-5],[-0.101,-0.1],[0,0],[-10.298,0],[-8.401,4.8],[-0.101,0.1],[-0.099,0],[-5,8.5],[0,0]],"o":[[4.8,-8.4],[0,-10.299],[0,-0.101],[0,-0.101],[-5,-8.5],[-0.102,-0.101],[-0.102,-0.101],[-8.301,-4.8],[-10.299,0],[-0.1,0],[-0.101,0.1],[-8.4,5],[-0.102,0.1],[-0.101,0.1],[-4.8,8.3],[0,10.3],[0,0.101],[0,0.1],[5,8.5],[0.1,0.1],[0.099,0],[8.398,4.8],[10.301,0],[0.099,0],[0.1,0],[8.5,-5],[0,-0.101],[0.003,-0.3]],"v":[[49.602,28.349],[57.201,-0.051],[49.602,-28.45],[49.499,-28.65],[49.4,-28.85],[28.9,-49.45],[28.6,-49.65],[28.299,-49.751],[-0.002,-57.251],[-28.301,-49.751],[-28.601,-49.65],[-28.901,-49.45],[-49.401,-28.95],[-49.601,-28.65],[-49.702,-28.35],[-57.202,-0.05],[-49.702,28.25],[-49.601,28.551],[-49.401,28.75],[-28.901,49.351],[-28.601,49.551],[-28.401,49.651],[-0.003,57.251],[28.398,49.651],[28.598,49.551],[28.797,49.45],[49.398,28.85],[49.497,28.749]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[1.601,0],[0,1.601],[-1.599,0],[0,-1.6]],"o":[[-1.7,0],[0,-1.6],[1.701,0],[0,1.7]],"v":[[0,2.949],[-3,-0.051],[0,-3.051],[3,-0.051]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[4.901,0],[0,-4.899],[-4.898,0],[0,4.9]],"o":[[-5,0],[0,5],[5,0],[0,-5]],"v":[[0,-9.051],[-9,-0.051],[0,8.949],[9,-0.051]],"c":true},"ix":2},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.46699999641,0.736999990426,0.670999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[473.799,418.851],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":6,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":169,"st":0,"bm":0},{"ddd":0,"ind":15,"ty":4,"nm":"click-cronometro/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":0,"s":[473.703,350.9,0],"e":[473.703,354.9,0],"to":[0,0.66666668653488,0],"ti":[0,-0.66666668653488,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":4,"s":[473.703,354.9,0],"e":[473.703,354.9,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":45,"s":[473.703,354.9,0],"e":[473.703,350.899,0],"to":[0,-0.66666758060455,0],"ti":[0,0.66666758060455,0]},{"t":47}],"ix":2},"a":{"a":0,"k":[473.703,350.9,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[9.05,-1.4],[-9.05,-1.4],[-9.05,-7.4],[9.05,-7.4]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[1.7,0],[0,0],[0,-1.7],[0,0],[-1.7,0],[0,0],[0,0],[-1.7,0],[0,1.299],[0,0],[0,0],[0,0],[-1.7,0],[0,1.299],[0,0],[0,0],[0,1.7],[0,0]],"o":[[0,0],[-1.7,0],[0,0],[0,1.7],[0,0],[0,0],[0,1.3],[1.7,0],[0,0],[0,0],[0,0],[0,1.3],[1.7,0],[0,0],[0,0],[1.7,0],[0,0],[0.1,-1.7]],"v":[[12.05,-13.4],[-12.05,-13.4],[-15.05,-10.4],[-15.05,1.6],[-12.05,4.6],[-9.05,4.6],[-9.05,11],[-6.05,13.4],[-3.05,11],[-3.05,4.6],[2.95,4.6],[2.95,11],[5.95,13.4],[8.95,11],[8.95,4.6],[11.95,4.6],[14.95,1.6],[14.95,-10.4]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.372999991623,0.583999992819,0.532999973671,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[473.75,350.9],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":169,"st":0,"bm":0},{"ddd":0,"ind":16,"ty":4,"nm":"ponteiro-cronometro/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":4,"s":[0],"e":[122]},{"t":48}],"ix":10},"p":{"a":0,"k":[473.75,418.448,0],"ix":2},"a":{"a":0,"k":[473.75,418.448,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.663,-0.001],[0,-1.663],[0,0],[-1.662,0],[-0.544,0.544],[-0.001,0.832],[0,0]],"o":[[-1.663,-0.002],[0,0],[0,1.66],[0.832,-0.001],[0.546,-0.545],[0,0],[0,-1.664]],"v":[[0.003,-22.353],[-3.009,-19.344],[-3.014,19.345],[-0.003,22.355],[2.128,21.474],[3.009,19.341],[3.013,-19.342]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[473.75,405.343],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":-6,"op":169,"st":4,"bm":0},{"ddd":0,"ind":17,"ty":4,"nm":"botao1/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":19,"s":[0],"e":[100]},{"t":43}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":19,"s":[115.2,191.3,0],"e":[125.2,191.3,0],"to":[1.37896275520325,0,0],"ti":[-0.28770443797112,0,0]},{"t":43}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[125.2,191.3,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0,2.1]],"o":[[0,0],[-2.1,0],[0,2.1],[2.1,0],[0,-2.1]],"v":[[0,-3.8],[0,-3.8],[-3.8,0],[0,3.8],[3.8,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.451000019148,0.62400004069,0.732999973671,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[125.2,191.3],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":19,"op":169,"st":19,"bm":0},{"ddd":0,"ind":18,"ty":4,"nm":"botao2/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":21,"s":[100],"e":[100]},{"t":45}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":21,"s":[130.152,191.3,0],"e":[140.152,191.3,0],"to":[1.66666376590729,0,0],"ti":[-1.66666376590729,0,0]},{"t":45}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[140.152,191.3,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0,2.1]],"o":[[0,0],[-2.1,0],[0,2.1],[2.1,0],[0.1,-2.1]],"v":[[0,-3.8],[0,-3.8],[-3.8,0],[0,3.8],[3.7,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.46699999641,0.736999990426,0.670999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[140.2,191.3],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":21,"op":169,"st":21,"bm":0},{"ddd":0,"ind":19,"ty":4,"nm":"botao3/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":23,"s":[0],"e":[100]},{"t":47}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":23,"s":[145.152,191.3,0],"e":[155.152,191.3,0],"to":[1.66666376590729,0,0],"ti":[-1.66666376590729,0,0]},{"t":47}],"ix":2,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[155.152,191.3,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[-2.1,0],[0.1,2.1]],"o":[[0,0],[-2.1,0],[0,2.1],[2.1,0],[0.1,-2.1]],"v":[[0,-3.8],[0,-3.8],[-3.8,0],[0,3.8],[3.7,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.675,0.859000052658,0.816000007181,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[155.2,191.3],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":23,"op":169,"st":23,"bm":0},{"ddd":1,"ind":20,"ty":4,"nm":"cabecalho/agilidade2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[0],"e":[100]},{"t":23}],"ix":11},"rx":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[-90],"e":[0]},{"t":47}],"ix":8,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"ry":{"a":0,"k":0,"ix":9},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[305.05,258.8,0],"ix":2},"a":{"a":0,"k":[305.05,258.8,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.1],[2.1,0],[0,0],[0,2.101],[-2.1,0],[0,0]],"o":[[0,2.101],[0,0],[-2.1,0],[0,-2.1],[0,0],[2.1,0]],"v":[[86.25,7.5],[82.45,11.3],[-82.55,11.3],[-86.35,7.5],[-82.55,3.7],[82.45,3.7]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,2],[-2.1,0],[0,0],[0,-2.1],[2.1,0],[0,0]],"o":[[0,-2.1],[0,0],[2.1,0],[0,2.101],[0,0],[-2.1,-0.1]],"v":[[-131.35,-7.5],[-127.55,-11.3],[127.45,-11.3],[131.25,-7.5],[127.45,-3.7],[-127.55,-3.7]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[161.25,26.2],[-161.25,26.2],[-161.25,-26.3],[161.25,-26.3]],"c":true},"ix":2},"nm":"Path 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[2.1,0],[0,0],[0,-2.1],[0,0],[-2,0],[0,0],[0,2.101],[0,0]],"o":[[0,0],[-2.1,0],[0,0],[0,2.101],[0,0],[2.1,0],[0,0],[-0.1,-2.1]],"v":[[164.95,-33.8],[-165.05,-33.8],[-168.75,-30],[-168.75,30],[-165.05,33.8],[164.95,33.8],[168.75,30],[168.75,-30]],"c":true},"ix":2},"nm":"Path 4","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.180000005984,0.226999993418,0.255000005984,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[305.05,258.8],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":6,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":13,"op":169,"st":13,"bm":0},{"ddd":1,"ind":21,"ty":4,"nm":"browser/agilidade2 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"rx":{"a":0,"k":0,"ix":8},"ry":{"a":0,"k":0,"ix":9,"x":"var $bm_rt;\nfunction easeandwizz_outElastic(t, b, c, d, a, p) {\n    var s;\n    var p = 0.81;\n    var a = 50;\n    if (t == 0)\n        return b;\n    if ((t /= d) == 1)\n        return sum(b, c);\n    if (!p)\n        p = mul(d, 0.3);\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = div(p, 4);\n    } else\n        s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n    return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"rz":{"a":0,"k":0,"ix":10},"or":{"a":0,"k":[0,0,0],"ix":7},"p":{"a":0,"k":[305.1,311.3,0],"ix":2},"a":{"a":0,"k":[305.1,311.3,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"n":"0p667_1_0p333_0","t":0,"s":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[106.6,456],[106.6,718.6],[504.201,718.6],[504.201,456]],"c":true}],"e":[{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[106.3,180],[106.3,442.6],[503.901,442.6],[503.901,180]],"c":true}]},{"t":29}],"ix":1,"x":"var $bm_rt;\nfunction easeandwizz_outSine(t, b, c, d) {\n    return sum(mul(c, Math.sin(mul(div(t, d), div(Math.PI, 2)))), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_outSine(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,-6.3],[0,0],[0,0],[-2,0],[0,0],[0,2.101],[2.1,0],[0,0],[0,0],[0,0],[0,0],[-2.099,0],[0,2],[0,0],[0,0],[0,0],[6.3,0]],"o":[[-6.201,0],[0,0],[0,0],[0,2.101],[0,0],[2.1,0],[0,-2.1],[0,0],[0,0],[0,0],[0,0],[0,2.1],[2.102,0],[0,0],[0,0],[0,0],[0,-6.2],[0,0]],"v":[[-187.6,-131.3],[-198.8,-120],[-198.8,-112.501],[-198.8,127.5],[-195.1,131.3],[89.9,131.3],[93.7,127.5],[89.9,123.7],[-191.3,123.7],[-191.3,-108.8],[191.2,-108.8],[191.2,14.9],[194.999,18.7],[198.801,15],[198.801,-112.501],[198.801,-120],[198.7,-120],[187.4,-131.3]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[-2.1,0],[0,0],[0,-2.1],[0,0],[0,0]],"o":[[0,-2.1],[0,0],[1.999,0],[0,0],[0,0],[0,0]],"v":[[-191.3,-120],[-187.5,-123.8],[187.499,-123.8],[191.301,-120],[191.301,-116.2],[-191.3,-116.2]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.450980395079,0.623529434204,0.733333349228,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[305.1,311.3],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transformar"}],"nm":"Group 1","np":4,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":169,"st":0,"bm":0}],"markers":[]}