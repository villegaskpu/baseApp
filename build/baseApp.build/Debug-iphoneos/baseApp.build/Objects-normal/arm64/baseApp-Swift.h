// Generated by Apple Swift version 5.0.1 effective-4.2 (swiftlang-1001.0.82.4 clang-1001.0.46.5)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import MessageUI;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="baseApp",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC7baseApp11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MFMailComposeViewController;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC7baseApp15BViewController")
@interface BViewController : UIViewController
- (void)viewDidLoad;
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7baseApp4Font")
@interface Font : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocationManager;
@class CLLocation;
@class CLRegion;

SWIFT_CLASS("_TtC7baseApp12LocationUtil")
@interface LocationUtil : NSObject <CLLocationManagerDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didStartMonitoringForRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didDetermineState:(CLRegionState)state forRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
@end

@class UIImageView;
@class UIView;
@class UIButton;
@class SkyFloatingLabelTextFieldWithIcon;
@class UITextField;

SWIFT_CLASS("_TtC7baseApp7LoginVC")
@interface LoginVC : BViewController
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified homeLogo;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified viewTextFiels;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified btnLogin;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified iconEye;
@property (nonatomic, weak) IBOutlet SkyFloatingLabelTextFieldWithIcon * _Null_unspecified txtCorreo;
@property (nonatomic, weak) IBOutlet SkyFloatingLabelTextFieldWithIcon * _Null_unspecified txtPassword;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified recuperarContrase√±a;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified ingresoAnonimo;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified crearCuenta;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (IBAction)btnShowPassword:(id _Nonnull)sender;
- (IBAction)btnEntrar:(id _Nonnull)sender;
- (void)textFieldDidChange:(UITextField * _Nonnull)textfield;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC7baseApp8OfertsVC")
@interface OfertsVC : BViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

enum TTGSnackbarDuration : NSInteger;
enum TTGSnackbarAnimationType : NSInteger;
@class UIColor;
@class UIFont;
@class UIImage;

SWIFT_CLASS("_TtC7baseApp11TTGSnackbar")
@interface TTGSnackbar : UIView
/// Tap callback
@property (nonatomic, copy) void (^ _Nullable onTapBlock)(TTGSnackbar * _Nonnull);
/// Swipe callback
@property (nonatomic, copy) void (^ _Nullable onSwipeBlock)(TTGSnackbar * _Nonnull, UISwipeGestureRecognizerDirection);
/// A property to make the snackbar auto dismiss on Swipe Gesture
@property (nonatomic) BOOL shouldDismissOnSwipe;
/// a property to enable left and right margin when using customContentView
@property (nonatomic) BOOL shouldActivateLeftAndRightMarginOnCustomContentView;
/// Action callback.
@property (nonatomic, copy) void (^ _Nullable actionBlock)(TTGSnackbar * _Nonnull);
/// Second action block
@property (nonatomic, copy) void (^ _Nullable secondActionBlock)(TTGSnackbar * _Nonnull);
/// Dismiss callback.
@property (nonatomic, copy) void (^ _Nullable dismissBlock)(TTGSnackbar * _Nonnull);
/// Snackbar display duration. Default is Short - 1 second.
@property (nonatomic) enum TTGSnackbarDuration duration;
/// Snackbar animation type. Default is SlideFromBottomBackToBottom.
@property (nonatomic) enum TTGSnackbarAnimationType animationType;
/// Show and hide animation duration. Default is 0.3
@property (nonatomic) NSTimeInterval animationDuration;
/// Corner radius: [0, height / 2]. Default is 4
@property (nonatomic) CGFloat cornerRadius;
/// Left margin. Default is 4
@property (nonatomic) CGFloat leftMargin;
/// Right margin. Default is 4
@property (nonatomic) CGFloat rightMargin;
/// Bottom margin. Default is 4, only work when snackbar is at bottom
@property (nonatomic) CGFloat bottomMargin;
/// Top margin. Default is 4, only work when snackbar is at top
@property (nonatomic) CGFloat topMargin;
/// Content inset. Default is (0, 4, 0, 4)
@property (nonatomic) UIEdgeInsets contentInset;
/// Main text shown on the snackbar.
@property (nonatomic, copy) NSString * _Nonnull message;
/// Message text color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
/// Message text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull messageTextFont;
/// Message text alignment. Default is left
@property (nonatomic) NSTextAlignment messageTextAlign;
/// Action button title.
@property (nonatomic, copy) NSString * _Nonnull actionText;
/// Action button image.
@property (nonatomic, strong) UIImage * _Nullable actionIcon;
/// Second action button title.
@property (nonatomic, copy) NSString * _Nonnull secondActionText;
/// Action button title color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull actionTextColor;
/// Second action button title color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull secondActionTextColor;
/// Action text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull actionTextFont;
/// Second action text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull secondActionTextFont;
/// Action button max width, min = 44
@property (nonatomic) CGFloat actionMaxWidth;
/// Action button text number of lines. Default is 1
@property (nonatomic) NSInteger actionTextNumberOfLines;
/// Icon image
@property (nonatomic, strong) UIImage * _Nullable icon;
/// Icon image content
@property (nonatomic) UIViewContentMode iconContentMode;
/// Custom container view
@property (nonatomic, strong) UIView * _Nullable containerView;
/// Custom content view
@property (nonatomic, strong) UIView * _Nullable customContentView;
/// SeparateView background color
@property (nonatomic, strong) UIColor * _Nonnull separateViewBackgroundColor;
/// ActivityIndicatorViewStyle
@property (nonatomic) enum UIActivityIndicatorViewStyle activityIndicatorViewStyle;
/// ActivityIndicatorView color
@property (nonatomic, strong) UIColor * _Nonnull activityIndicatorViewColor;
/// Animation SpringWithDamping. Default is 0.7
@property (nonatomic) CGFloat animationSpringWithDamping;
/// Animation initialSpringVelocity
@property (nonatomic) CGFloat animationInitialSpringVelocity;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Default init
///
/// returns:
/// TTGSnackbar instance
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show a single message like a Toast.
/// \param message Message text.
///
/// \param duration Duration type.
///
///
/// returns:
/// TTGSnackbar instance
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message duration:(enum TTGSnackbarDuration)duration OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end






@interface TTGSnackbar (SWIFT_EXTENSION(baseApp))
/// Show the snackbar.
- (void)show;
@end






@interface TTGSnackbar (SWIFT_EXTENSION(baseApp))
/// Dismiss the snackbar manually.
- (void)dismiss;
@end

/// Snackbar animation types.
/// <ul>
///   <li>
///     fadeInFadeOut:               Fade in to show and fade out to dismiss.
///   </li>
///   <li>
///     slideFromBottomToTop:        Slide from the bottom of screen to show and slide up to dismiss.
///   </li>
///   <li>
///     slideFromBottomBackToBottom: Slide from the bottom of screen to show and slide back to bottom to dismiss.
///   </li>
///   <li>
///     slideFromLeftToRight:        Slide from the left to show and slide to rigth to dismiss.
///   </li>
///   <li>
///     slideFromRightToLeft:        Slide from the right to show and slide to left to dismiss.
///   </li>
///   <li>
///     slideFromTopToBottom:        Slide from the top of screen to show and slide down to dismiss.
///   </li>
///   <li>
///     slideFromTopBackToTop:       Slide from the top of screen to show and slide back to top to dismiss.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TTGSnackbarAnimationType, closed) {
  TTGSnackbarAnimationTypeFadeInFadeOut = 0,
  TTGSnackbarAnimationTypeSlideFromBottomToTop = 1,
  TTGSnackbarAnimationTypeSlideFromBottomBackToBottom = 2,
  TTGSnackbarAnimationTypeSlideFromLeftToRight = 3,
  TTGSnackbarAnimationTypeSlideFromRightToLeft = 4,
  TTGSnackbarAnimationTypeSlideFromTopToBottom = 5,
  TTGSnackbarAnimationTypeSlideFromTopBackToTop = 6,
};

/// Snackbar display duration types.
/// <ul>
///   <li>
///     short:   1 second
///   </li>
///   <li>
///     middle:  3 seconds
///   </li>
///   <li>
///     long:    5 seconds
///   </li>
///   <li>
///     forever: Not dismiss automatically. Must be dismissed manually.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TTGSnackbarDuration, closed) {
  TTGSnackbarDurationShort = 1,
  TTGSnackbarDurationMiddle = 3,
  TTGSnackbarDurationLong = 5,
  TTGSnackbarDurationForever = 2147483647,
};






SWIFT_CLASS("_TtC7baseApp14ViewController")
@interface ViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7baseApp12YopterAlerts")
@interface YopterAlerts : UIView
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)dismissAlert;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface YopterAlerts (SWIFT_EXTENSION(baseApp)) <UITextFieldDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP7baseApp20YopterAlertsDelegate_")
@protocol YopterAlertsDelegate
@optional
- (void)YopterAlertsButttonPressedWithLeftButton:(YopterAlerts * _Nonnull)alert;
- (void)YopterAlertsButttonPressedWithRightButton:(YopterAlerts * _Nonnull)alert;
- (void)YopterAlertsButttonPressedWithOneButton:(YopterAlerts * _Nonnull)alert;
- (void)YopterAlertsButtonPressedWithLeftButtonTextField:(YopterAlerts * _Nonnull)alert textFieldText:(NSString * _Nonnull)textFieldText;
- (void)YopterAlertsButtonPressedWithRightButtonTextField:(YopterAlerts * _Nonnull)alert textFieldText:(NSString * _Nonnull)textFieldText;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
